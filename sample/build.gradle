buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.8.+'
        // To depend on the deployed version of the plugin add the following line here:
//        classpath 'com.novoda:gradle-android-command-plugin:1.1.0-SNAPSHOT'
    }
}
apply plugin: 'android'
apply plugin: 'android-command'

repositories {
    mavenCentral()
}

android {
    compileSdkVersion 19
    buildToolsVersion '19.0.1'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 18
    }

    buildTypes {
        debug {}
        release {}
        QA {}
    }

    productFlavors {

        flavorDimensions "pricing", "releaseType"

        beta {
            flavorDimension "releaseType"
        }

        normal {
            flavorDimension "releaseType"
        }

        free {
            flavorDimension "pricing"
        }

        paid {
            flavorDimension "pricing"
        }
    }

    command {
        deviceId {
            def minSdkDevices = devices().grep({ it.sdkVersion() >= defaultConfig.minSdkVersion }).sort()
            if (!minSdkDevices) {
                throw new IllegalStateException('No device found running android version >= ' + defaultConfig.minSdkVersion)
            }
            minSdkDevices[0].id
        }

        events 1000
        task('instHudl', com.novoda.gradle.command.Install) {
            deviceId {
                def hudlDevices = devices().grep({ it.brand() == 'hudl' })
                if (!hudlDevices) {
                    throw new GroovyRuntimeException('No hudl device found')
                }
                hudlDevices[0].id
            }
        }

        task('runNewest', com.novoda.gradle.command.Run, ['installDevice']) {
            deviceId {
                def device = devices().max({ it.sdkVersion() })
                if (!device) {
                    throw new GroovyRuntimeException('No hudl device found')
                }
                device.id
            }
        }

    }
}

task('deviceInfo') << {
    android.command.devices().each {
        println "Device ID: $it.id"
        println "SDK version: ${it.sdkVersion()}"
        println "Android version: ${it.androidVersion()}"
        println "Brand: ${it.brand()}"
        println "Model: ${it.model()}"
        println "Manufacturer: ${it.manufacturer()}"
        println "Screen density: ${it.screenDensity()}"
        println "Country: ${it.country()}"
        println "Language: ${it.language()}"
        println "Timezone: ${it.timezone()}"
        println()
    }
}


