buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.5.+'
        classpath 'com.novoda:gradle-android-command-plugin:0.9.2-SNAPSHOT'
    }
}
apply plugin: 'android'
apply plugin: 'android-command'

repositories {
    mavenCentral()
}

android {
    compileSdkVersion 18
    buildToolsVersion "18.0.1"

    defaultConfig {
        minSdkVersion 7
        targetSdkVersion 16
    }

    buildTypes {
        debug {}
        release {}
        QA {}
    }

    productFlavors {

        flavorGroups "pricing", "releaseType"

        beta {
            flavorGroup "releaseType"
        }

        normal {
            flavorGroup "releaseType"
        }

        free {
            flavorGroup "pricing"
        }

        paid {
            flavorGroup "pricing"
        }
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:18.0.0'
}

class Hudl extends com.novoda.gradle.command.Apk {

    def defaultDeviceId() {
        def hudlDevices = attachedDevices().findResults { deviceId ->
            def brand = "$adb -s $deviceId shell getprop ro.product.brand".execute()
            String brandName = brand.text.trim()
            brandName == "hudl" ? deviceId : null
        }

        if (hudlDevices.isEmpty()) {
            throw new IllegalStateException("No hudl devices found")
        }

        hudlDevices[0]
    }
}

variant.tasks "install", Hudl, {
    dependsOn "${-> 'assemble' + variationName}"
    doFirst { commandLine "$adb -s $deviceId install -r $apkPath".split(" ") }
}

variant.tasks "clearPreferences", Hudl, {
    doFirst { commandLine "$adb -s $deviceId install -r $apkPath".split(" ") }
}

variant.tasks "run", Hudl, {
    doFirst { commandLine "$adb -s $deviceId shell am start -a android.intent.action.MAIN -c android.intent.category.LAUNCHER $packageName/$launchableActivity".split(" ") }
}

variant.tasks "monkey", Hudl, {
    doFirst { commandLine "$adb -s $deviceId shell monkey -p $packageName -v 50".split(" ") }
}
